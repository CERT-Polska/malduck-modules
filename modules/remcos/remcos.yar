rule win_remcos : rat
{
    meta:
        author = "CERT Polska"
    strings:
        $convenient1 = " * Breaking-Security.Net"
        $convenient2 = " * REMCOS v"
        $convenient3 = "SETTINGS"
        $convenient4 = "Remcos_Mutex_Inj"
        $convenient5 = "Online Keylogger Started"
        $convenient6 = "Uploading file to C&C"
        $convenient7 = "Remcos Agent initialized"
    condition:
        3 of ($convenient*)
}

rule win_remcos_auto
{
    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2019-07-05"
        version = "1"
        description = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator 0.2a"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.remcos"
        malpedia_version = "20190620"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"
    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using yara-signator.
     * The code and documentation / approach is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */
    strings:
        $sequence_0 = { 51 50 8bce e8???????? 8b4608 ff7510 2b4508 }
            // n = 7, score = 1100
            //   51                   | push                ecx
            //   50                   | push                eax
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   8b4608               | mov                 eax, dword ptr [esi + 8]
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   2b4508               | sub                 eax, dword ptr [ebp + 8]
        $sequence_1 = { ff35???????? ff15???????? eb?? 6a09 ff35???????? ff15???????? ff35???????? }
            // n = 7, score = 1100
            //   ff35????????         |                     
            //   ff15????????         |                     
            //   eb??                 |                     
            //   6a09                 | push                9
            //   ff35????????         |                     
            //   ff15????????         |                     
            //   ff35????????         |                     
        $sequence_2 = { ff15???????? 57 57 57 8bd8 57 6a02 }
            // n = 7, score = 1100
            //   ff15????????         |                     
            //   57                   | push                edi
            //   57                   | push                edi
            //   57                   | push                edi
            //   8bd8                 | mov                 ebx, eax
            //   57                   | push                edi
            //   6a02                 | push                2
        $sequence_3 = { ff7114 e8???????? 5d c3 55 8bec }
            // n = 6, score = 1100
            //   ff7114               | push                dword ptr [ecx + 0x14]
            //   e8????????           |                     
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
        $sequence_4 = { 75?? 6a01 58 5d c3 8b4028 6a00 }
            // n = 7, score = 1100
            //   75??                 |                     
            //   6a01                 | push                1
            //   58                   | pop                 eax
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b4028               | mov                 eax, dword ptr [eax + 0x28]
            //   6a00                 | push                0
        $sequence_5 = { 8d45f0 50 ff15???????? 8d4df0 ff15???????? 8b4508 5e }
            // n = 7, score = 1100
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8d4df0               | lea                 ecx, [ebp - 0x10]
            //   ff15????????         |                     
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   5e                   | pop                 esi
        $sequence_6 = { 50 e8???????? 834608f4 8bc7 5f 5e 5d }
            // n = 7, score = 1100
            //   50                   | push                eax
            //   e8????????           |                     
            //   834608f4             | add                 dword ptr [esi + 8], -0xc
            //   8bc7                 | mov                 eax, edi
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
        $sequence_7 = { 6a00 ff7508 ffd6 50 ff15???????? 50 }
            // n = 6, score = 1100
            //   6a00                 | push                0
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ffd6                 | call                esi
            //   50                   | push                eax
            //   ff15????????         |                     
            //   50                   | push                eax
        $sequence_8 = { c3 ff7510 ff750c ff15???????? f7d8 1ac0 fec0 }
            // n = 7, score = 1100
            //   c3                   | ret                 
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff15????????         |                     
            //   f7d8                 | neg                 eax
            //   1ac0                 | sbb                 al, al
            //   fec0                 | inc                 al
        $sequence_9 = { e9???????? 55 8bec 51 56 8bf1 8d45ff }
            // n = 7, score = 1100
            //   e9????????           |                     
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   8d45ff               | lea                 eax, [ebp - 1]
    condition:
        7 of them
}
